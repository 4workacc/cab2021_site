{"version":3,"sources":["components/LoginPage/LoginPage.tsx","components/MainPage/NavBar/Navbar.tsx","components/MainPage/SubPages/AdminPanel.tsx","components/MainPage/SubPages/Cabinet.tsx","components/MainPage/SubPages/Tasks.tsx","components/MainPage/SubPages/TestsResults.tsx","components/MainPage/TestPage/TestPage.tsx","components/MainPage/MainPage.tsx","components/App/App.tsx","reportWebVitals.ts","store/state.ts","store/reducers.ts","index.tsx"],"names":["LoginPage","dispatch","useDispatch","className","id","type","htmlFor","onClick","NavBar","curUserFio","useSelector","state","navHandler","targetPage","curSubPage","exitHandler","href","data-target","AdminPanel","Cabinet","Tasks","useState","userTasksList","setUserTasksList","userShowTasksList","setUsetShowTasksList","useEffect","title","endDate","a","map","el","push","f","alert","TestsResults","userTestsResultsList","setUserTestsResultsList","showTestList","result","TestPage","MainPage","React","curShowSubPage","changeCurShowSubPage","App","curPage","curShowPage","changeCurShowPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","curUserId","curTest","rootReducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73b8d2c7.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport \"./LoginPage.css\";\r\n\r\nexport const LoginPage: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const LoginButHandler = () => {\r\n        dispatch({\r\n            type: \"LogIn\"\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"LoginPage\">\r\n            <div className=\"input-field col s12\">\r\n                <input id=\"login_name\" type=\"text\" className=\"validate\" />\r\n                <label htmlFor=\"login_name\">Лагін</label>\r\n            </div>\r\n            <div className=\"input-field col s12\">\r\n                <input id=\"password\" type=\"password\" className=\"validate\" />\r\n                <label htmlFor=\"password\">Пароль</label>\r\n            </div>\r\n            <a\r\n                className=\"waves-effect waves-light btn bntCenter\"\r\n                onClick={LoginButHandler}>Увайсці</a>\r\n        </div>\r\n    )\r\n} ","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport const NavBar: React.FC = () => {\r\n  const curUserFio = useSelector((state: SiteState) => state.curUserFio);\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const navHandler = (targetPage: string) => {\r\n    dispatch({\r\n      type: \"GoToSubPage\",\r\n      curSubPage: targetPage,\r\n    });\r\n  };\r\n  const exitHandler = () => {\r\n    dispatch({\r\n      type: \"LogOut\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <nav>\r\n        <div className=\"nav-wrapper\">\r\n          <a href=\"/\" className=\"brand-logo\">{`Прывітанне, ${curUserFio}`}</a>\r\n          <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\r\n            <i className=\"material-icons\">menu</i>\r\n          </a>\r\n          <ul className=\"right hide-on-med-and-down\">\r\n            <li>\r\n              <a onClick={() => navHandler(\"Tasks\")}>Заданні</a>\r\n            </li>\r\n            <li>\r\n              <a onClick={() => navHandler(\"Cabinet\")}>Кабінет</a>\r\n            </li>\r\n            <li>\r\n              <a onClick={() => navHandler(\"TestsResults\")}>Вынікі тэстаў</a>\r\n            </li>\r\n            <li>\r\n              <a onClick={exitHandler}>Выхад</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      <ul className=\"sidenav\" id=\"mobile-demo\">\r\n        <li>\r\n          <a onClick={() => navHandler(\"Tasks\")}>Заданні</a>\r\n        </li>\r\n        <li>\r\n          <a onClick={() => navHandler(\"Cabinet\")}>Кабінет</a>\r\n        </li>\r\n        <li>\r\n          <a onClick={() => navHandler(\"TestsResults\")}>Вынікі тэстаў</a>\r\n        </li>\r\n        <li>\r\n          <a onClick={exitHandler}>Выхад</a>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const AdminPanel: React.FC = () => {\r\n  return <>AdminPanel</>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Cabinet: React.FC = () => {\r\n  return <>Cabinet</>;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport const Tasks: React.FC = () => {\r\n  const [userTasksList, setUserTasksList] = useState<any[]>([]);\r\n  const [userShowTasksList, setUsetShowTasksList] = useState<any[]>([]);\r\n\r\n  const taskClickHandler = (f: string) => {\r\n    alert(f);\r\n  };\r\n  useEffect(() => {\r\n    setUserTasksList([\r\n      {\r\n        title: \"ЦТ_2020 5 варыянт\",\r\n        endDate: \"2020-01-01\",\r\n      },\r\n      {\r\n        title: \"ЦТ_2020 2 варыянт\",\r\n        endDate: \"2020-01-01\",\r\n      },\r\n    ]);\r\n  }, []);\r\n  useEffect(() => {\r\n    const a:any[] = [];\r\n    userTasksList.map((el) => {\r\n      a.push(\r\n        <tr\r\n          className=\"userTasksTabTr\"\r\n          onClick={() => taskClickHandler(el.title)}\r\n        >\r\n          <td>{el.title}</td>\r\n          <td>{el.endDate}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    setUsetShowTasksList(a);\r\n  }, [userTasksList]);\r\n  return (\r\n    <div className=\"Tasks\">\r\n      <table className=\"centered striped userTasksTab\">\r\n        <thead>\r\n          <tr>\r\n            <th>Назва тэста</th>\r\n            <th>Срок выканання</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>{userShowTasksList}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport const TestsResults: React.FC = () => {\r\n  const [userTestsResultsList, setUserTestsResultsList] = useState<any[]>([]);\r\n  useEffect(() => {\r\n    const testSet: IUserTestResults[] = [\r\n      {\r\n        id: 1,\r\n        title: \"ЦТ_2020_1\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10  \r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"ЦТ_2020_2\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 1,\r\n        title: \"ЦТ_2020_3\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"ЦТ_2020_1\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 1,\r\n        title: \"ЦТ_2020_2\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"ЦТ_2020_6\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 1,\r\n        title: \"Пунтуация \",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"test2\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 1,\r\n        title: \"test0\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"test2\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 1,\r\n        title: \"test0\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"test2\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 1,\r\n        title: \"test0\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"test2\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 1,\r\n        title: \"test0\",\r\n        endDate: \"2021-01-02\",\r\n        result : 10\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"test2\",\r\n        endDate: \"2021-01-02\"\r\n      },\r\n      {\r\n        id: 1,\r\n        title: \"test0\",\r\n        endDate: \"2021-01-02\"\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"test2\",\r\n        endDate: \"2021-01-02\"\r\n      }\r\n    ];\r\n    const showTestList:any[] = [];\r\n    testSet.map((el) => {\r\n      showTestList.push(\r\n        <tr className = \"userTestsResultsTabTr\">\r\n          <td>{el.title}</td>\r\n          <td>{el.endDate}</td>\r\n          <td>{el.result}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    setUserTestsResultsList(showTestList);\r\n  }, []);\r\n  return (\r\n    <div className=\"TestsResults\">\r\n      <p className=\"TestsResultsTitle\">Test results list</p>\r\n      <table className=\"centered striped userTestsResultsTab\">\r\n        <thead>\r\n          <tr>\r\n            <th>Назва тэста</th>\r\n            <th>Дата выконвання</th>\r\n            <th>Вынік</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          { userTestsResultsList }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const TestPage: React.FC = () => {\r\n    return (\r\n        <div className=\"TestPage\">\r\n            test\r\n        </div>\r\n    )\r\n}","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { NavBar } from \"./NavBar/Navbar\";\r\nimport { AdminPanel } from \"./SubPages/AdminPanel\";\r\nimport { Cabinet } from \"./SubPages/Cabinet\";\r\nimport { Tasks } from \"./SubPages/Tasks\";\r\nimport { TestsResults } from \"./SubPages/TestsResults\";\r\nimport { TestPage } from \"./TestPage/TestPage\";\r\n\r\nexport const MainPage: React.FC = () => {\r\n  const curSubPage = useSelector((state: SiteState) => state.curSubPage);\r\n  const [curShowSubPage, changeCurShowSubPage] = React.useState(<Tasks />);\r\n\r\n  React.useEffect(() => {\r\n    switch (curSubPage) {\r\n      case \"Tasks\":\r\n        changeCurShowSubPage(<Tasks />);\r\n        break;\r\n      case \"TestsResults\":\r\n        changeCurShowSubPage(<TestsResults />);\r\n        break;\r\n      case \"Cabinet\":\r\n        changeCurShowSubPage(<Cabinet />);\r\n        break;\r\n      case \"AdminPanel\":\r\n        changeCurShowSubPage(<AdminPanel />);\r\n        break;\r\n      case \"TestPage\":\r\n        changeCurShowSubPage(<TestPage />);\r\n        break;\r\n      default:\r\n        changeCurShowSubPage(<Tasks />);\r\n    }\r\n  }, [curSubPage]);\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"container\">{curShowSubPage}</div>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { LoginPage } from '../LoginPage/LoginPage';\r\nimport { MainPage } from '../MainPage/MainPage';\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const curPage: string = useSelector( (state:SiteState) => state.curPage)\r\n\r\n  const [ curShowPage, changeCurShowPage ] = React.useState(<LoginPage />);\r\n\r\n  React.useEffect( ()=>{\r\n    switch ( curPage ) {\r\n      case \"LoginPage\" : changeCurShowPage(<LoginPage />); break;\r\n      case \"MainPage\"  : changeCurShowPage(<MainPage />); break;\r\n      default :  changeCurShowPage(<LoginPage />);\r\n    }\r\n  }, [curPage])\r\n\r\n  return (\r\n    <>     \r\n     {curShowPage}     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initState: SiteState = {\r\n    curPage : \"LoginPage\" ,\r\n    curSubPage : \"MainMenu\",\r\n    curUserId : -1,\r\n    curUserFio : '',\r\n    curTest : ''\r\n}","import { initState } from \"./state\";\r\n\r\nconst rootReducer = (\r\n    state: SiteState = initState,\r\n    action : SiteAction\r\n): SiteState => {\r\n    switch ( action.type ) {\r\n        case \"LogIn\" :\r\n            return  {\r\n                ...state,\r\n                curPage : \"MainPage\",\r\n                curUserFio : \"Іваноў І.І.\"\r\n            }; \r\n        case \"LogOut\" : \r\n            return {\r\n                ...state,\r\n                curPage : \"LoginPage\",\r\n                curSubPage : \"Tasks\",\r\n                curUserId : -1,\r\n                curUserFio : \"\"\r\n            }; \r\n        case \"GoToSubPage\" :               \r\n                return {\r\n                    ...state,\r\n                    curPage : \"MainPage\",\r\n                    curSubPage: action.curSubPage||\"MainMenu\"\r\n                };\r\n        case \"ShowTest\" :\r\n                return {\r\n                    ...state,\r\n                    curSubPage : \"TestPage\",\r\n                }\r\n        default :\r\n            return state;\r\n    }    \r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\nimport { createStore, Store } from 'redux';\n\nconst store: Store<SiteState, SiteAction> = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store = { store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}